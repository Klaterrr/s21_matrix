<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="ru">
  <compounddef id="s21__matrix_8c" kind="file" language="C++">
    <compoundname>s21_matrix.c</compoundname>
    <includes refid="s21__matrix_8h" local="yes">s21_matrix.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/s21_matrix.c</label>
        <link refid="s21__matrix_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>s21_matrix.h</label>
        <link refid="s21__matrix_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>math.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="s21__matrix_8c_1a2c36041738ad182088945fcd15eca832" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref></type>
        <definition>static result_code_t populate_complements_matrix</definition>
        <argsstring>(const matrix_t *A, matrix_t *result)</argsstring>
        <name>populate_complements_matrix</name>
        <param>
          <type>const <ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Заполняет матрицу алгебраическими дополнениями. </para>
        </briefdescription>
        <detaileddescription>
<para>Эта вспомогательная функция итерирует по каждому элементу исходной матрицы A, вычисляет для него минор и его определитель, а затем записывает итоговое алгебраическое дополнение в матрицу result. Предполагается, что &apos;result&apos; уже создана и имеет те же размеры, что и &apos;A&apos;. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">A</parametername>
</parameternamelist>
<parameterdescription>
<para>Исходная матрица. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>Матрица для записи алгебраических дополнений. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Код результата операции: OK (0) или код ошибки от вложенных вызовов. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/s21_matrix.c" line="116" column="22" bodyfile="src/s21_matrix.c" bodystart="116" bodyend="142" declfile="src/s21_matrix.c" declline="4" declcolumn="22"/>
        <references refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" compoundref="s21__matrix_8h" startline="33">matrix_struct::columns</references>
        <references refid="s21__matrix_8c_1ad0f646f72453f127ab099735d14377c0" compoundref="s21__matrix_8c" startline="55" endline="68">get_minor_matrix</references>
        <references refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" compoundref="s21__matrix_8h" startline="31">matrix_struct::matrix</references>
        <references refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" compoundref="s21__matrix_8h" startline="40">OK</references>
        <references refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" compoundref="s21__matrix_8h" startline="32">matrix_struct::rows</references>
        <references refid="group__matrix__core_1ga59fdb6ff4aeb96dc381c8f8986af2bd4" compoundref="s21__matrix_8c" startline="208" endline="231">s21_create_matrix</references>
        <references refid="group__matrix__algebra_1gad1aa328504824fe335a97917c33e41b6" compoundref="s21__matrix_8c" startline="370" endline="398">s21_determinant</references>
        <references refid="group__matrix__core_1gaad8337ad12e6dae5bdbbaf1d3b35e140" compoundref="s21__matrix_8c" startline="233" endline="243">s21_remove_matrix</references>
        <referencedby refid="group__matrix__algebra_1gab1e3ac9001c0a4e67e876f90d60d23e1" compoundref="s21__matrix_8c" startline="400" endline="418">s21_calc_complements</referencedby>
      </memberdef>
      <memberdef kind="function" id="s21__matrix_8c_1ae9d2106673240ba90364150a17349e70" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void perform_multiplication</definition>
        <argsstring>(const matrix_t *A, const matrix_t *B, matrix_t *result)</argsstring>
        <name>perform_multiplication</name>
        <param>
          <type>const <ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const <ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>B</declname>
        </param>
        <param>
          <type><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Выполняет вычисление произведения двух матриц и записывает в результирующую. </para>
        </briefdescription>
        <detaileddescription>
<para>Эта вспомогательная функция предполагает, что все проверки на валидность и совместимость размеров матриц уже пройдены, и результирующая матрица &apos;result&apos; уже создана и имеет корректные размеры. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">A</parametername>
</parameternamelist>
<parameterdescription>
<para>Первая матрица-множитель. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">B</parametername>
</parameternamelist>
<parameterdescription>
<para>Вторая матрица-множитель. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>Матрица для записи результата. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/s21_matrix.c" line="79" column="13" bodyfile="src/s21_matrix.c" bodystart="79" bodyend="89" declfile="src/s21_matrix.c" declline="5" declcolumn="13"/>
        <references refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" compoundref="s21__matrix_8h" startline="33">matrix_struct::columns</references>
        <references refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" compoundref="s21__matrix_8h" startline="31">matrix_struct::matrix</references>
        <references refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" compoundref="s21__matrix_8h" startline="32">matrix_struct::rows</references>
        <referencedby refid="group__matrix__arithmetic_1ga9c2c1fd5d9c5e189f0fb2851fd2a1ee3" compoundref="s21__matrix_8c" startline="328" endline="348">s21_mult_matrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="s21__matrix_8c_1ae01bee57f55876771f6d1c7f74d43854" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref></type>
        <definition>static result_code_t allocate_matrix_rows</definition>
        <argsstring>(matrix_t *result)</argsstring>
        <name>allocate_matrix_rows</name>
        <param>
          <type><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Выделяет память под строки матрицы и инициализирует их нулями. </para>
        </briefdescription>
        <detaileddescription>
<para>Вызывается после того, как память под массив указателей уже выделена. В случае ошибки выделения памяти для одной из строк, освобождает всю ранее выделенную память для этой матрицы. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">result</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на матрицу. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OK (0) в случае успеха, иначе INCORRECT_MATRIX (1). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/s21_matrix.c" line="22" column="22" bodyfile="src/s21_matrix.c" bodystart="22" bodyend="35"/>
        <references refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" compoundref="s21__matrix_8h" startline="33">matrix_struct::columns</references>
        <references refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a95e17de6753200c8a418b2cc7e75647c" compoundref="s21__matrix_8h" startline="41">INCORRECT_MATRIX</references>
        <references refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" compoundref="s21__matrix_8h" startline="31">matrix_struct::matrix</references>
        <references refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" compoundref="s21__matrix_8h" startline="40">OK</references>
        <references refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" compoundref="s21__matrix_8h" startline="32">matrix_struct::rows</references>
        <references refid="group__matrix__core_1gaad8337ad12e6dae5bdbbaf1d3b35e140" compoundref="s21__matrix_8c" startline="233" endline="243">s21_remove_matrix</references>
        <referencedby refid="group__matrix__core_1ga59fdb6ff4aeb96dc381c8f8986af2bd4" compoundref="s21__matrix_8c" startline="208" endline="231">s21_create_matrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int is_matrix_valid</definition>
        <argsstring>(const matrix_t *A)</argsstring>
        <name>is_matrix_valid</name>
        <param>
          <type>const <ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>A</declname>
        </param>
        <briefdescription>
<para>Проверяет, является ли матрица корректной. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">A</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на матрицу для проверки. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 если матрица корректна, иначе 0. </para>
</simplesect>
<simplesect kind="note"><para>Корректная матрица - не NULL, указатель на данные не NULL, размеры строк и столбцов положительные. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/s21_matrix.c" line="44" column="12" bodyfile="src/s21_matrix.c" bodystart="44" bodyend="46"/>
        <references refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" compoundref="s21__matrix_8h" startline="33">matrix_struct::columns</references>
        <references refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" compoundref="s21__matrix_8h" startline="31">matrix_struct::matrix</references>
        <references refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" compoundref="s21__matrix_8h" startline="32">matrix_struct::rows</references>
        <referencedby refid="group__matrix__algebra_1gab1e3ac9001c0a4e67e876f90d60d23e1" compoundref="s21__matrix_8c" startline="400" endline="418">s21_calc_complements</referencedby>
        <referencedby refid="group__matrix__algebra_1gad1aa328504824fe335a97917c33e41b6" compoundref="s21__matrix_8c" startline="370" endline="398">s21_determinant</referencedby>
        <referencedby refid="group__matrix__core_1ga63bcd0d51a932d940a62b7356b69bfe7" compoundref="s21__matrix_8c" startline="245" endline="268">s21_eq_matrix</referencedby>
        <referencedby refid="group__matrix__algebra_1gacf36c0578df2e0b3a9e63fc8ad3b3276" compoundref="s21__matrix_8c" startline="421" endline="445">s21_inverse_matrix</referencedby>
        <referencedby refid="group__matrix__arithmetic_1ga9c2c1fd5d9c5e189f0fb2851fd2a1ee3" compoundref="s21__matrix_8c" startline="328" endline="348">s21_mult_matrix</referencedby>
        <referencedby refid="group__matrix__arithmetic_1gacd185705783880e5cc7c233329b9d7ef" compoundref="s21__matrix_8c" startline="310" endline="326">s21_mult_number</referencedby>
        <referencedby refid="group__matrix__arithmetic_1ga1942072e4680db31e2854b071b00c3fc" compoundref="s21__matrix_8c" startline="290" endline="308">s21_sub_matrix</referencedby>
        <referencedby refid="group__matrix__arithmetic_1gaaa350889d1c45b3b8bb269f9c37e94e7" compoundref="s21__matrix_8c" startline="270" endline="288">s21_sum_matrix</referencedby>
        <referencedby refid="group__matrix__algebra_1ga4a5bbe0e14296f6ec7a91e57ac202ed2" compoundref="s21__matrix_8c" startline="351" endline="367">s21_transpose</referencedby>
      </memberdef>
      <memberdef kind="function" id="s21__matrix_8c_1ad0f646f72453f127ab099735d14377c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void get_minor_matrix</definition>
        <argsstring>(const matrix_t *A, int excluding_row, int excluding_col, matrix_t *result)</argsstring>
        <name>get_minor_matrix</name>
        <param>
          <type>const <ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>A</declname>
        </param>
        <param>
          <type>int</type>
          <declname>excluding_row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>excluding_col</declname>
        </param>
        <param>
          <type><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Создает минорную матрицу, исключая заданную строку и столбец. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">A</parametername>
</parameternamelist>
<parameterdescription>
<para>Исходная матрица. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">excluding_row</parametername>
</parameternamelist>
<parameterdescription>
<para>Индекс исключаемой строки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">excluding_col</parametername>
</parameternamelist>
<parameterdescription>
<para>Индекс исключаемого столбца. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">result</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на результирующую минорную матрицу. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/s21_matrix.c" line="55" column="13" bodyfile="src/s21_matrix.c" bodystart="55" bodyend="68"/>
        <references refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" compoundref="s21__matrix_8h" startline="33">matrix_struct::columns</references>
        <references refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" compoundref="s21__matrix_8h" startline="31">matrix_struct::matrix</references>
        <references refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" compoundref="s21__matrix_8h" startline="32">matrix_struct::rows</references>
        <referencedby refid="s21__matrix_8c_1a2c36041738ad182088945fcd15eca832" compoundref="s21__matrix_8c" startline="116" endline="142">populate_complements_matrix</referencedby>
        <referencedby refid="group__matrix__algebra_1gad1aa328504824fe335a97917c33e41b6" compoundref="s21__matrix_8c" startline="370" endline="398">s21_determinant</referencedby>
      </memberdef>
      <memberdef kind="function" id="s21__matrix_8c_1a4d867d79fab5221c0825b4ef15c8d99c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void perform_transposition</definition>
        <argsstring>(const matrix_t *A, matrix_t *result)</argsstring>
        <name>perform_transposition</name>
        <param>
          <type>const <ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Копирует элементы из исходной матрицы в транспонированную. </para>
        </briefdescription>
        <detaileddescription>
<para>Эта вспомогательная функция предполагает, что обе матрицы, A и result, уже существуют и имеют корректные (взаимно-транспонированные) размеры. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">A</parametername>
</parameternamelist>
<parameterdescription>
<para>Исходная матрица. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>Результирующая (транспонированная) матрица. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/s21_matrix.c" line="98" column="13" bodyfile="src/s21_matrix.c" bodystart="98" bodyend="104"/>
        <references refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" compoundref="s21__matrix_8h" startline="33">matrix_struct::columns</references>
        <references refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" compoundref="s21__matrix_8h" startline="31">matrix_struct::matrix</references>
        <references refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" compoundref="s21__matrix_8h" startline="32">matrix_struct::rows</references>
        <referencedby refid="group__matrix__algebra_1ga4a5bbe0e14296f6ec7a91e57ac202ed2" compoundref="s21__matrix_8c" startline="351" endline="367">s21_transpose</referencedby>
      </memberdef>
      <memberdef kind="function" id="s21__matrix_8c_1a96a189c4d33a3082ff66f8e0ca67531d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref></type>
        <definition>static result_code_t perform_inverse_calculation</definition>
        <argsstring>(const matrix_t *A, double det, matrix_t *result)</argsstring>
        <name>perform_inverse_calculation</name>
        <param>
          <type>const <ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>A</declname>
        </param>
        <param>
          <type>double</type>
          <declname>det</declname>
        </param>
        <param>
          <type><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Выполняет основную последовательность вычислений для нахождения обратной матрицы. </para>
        </briefdescription>
        <detaileddescription>
<para>Эта вспомогательная функция вызывается после того, как исходная матрица проверена и ее определитель вычислен. Она находит матрицу алгебраических дополнений, транспонирует ее и умножает на (1/определитель). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">A</parametername>
</parameternamelist>
<parameterdescription>
<para>Исходная матрица. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">det</parametername>
</parameternamelist>
<parameterdescription>
<para>Заранее вычисленный ненулевой определитель матрицы A. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на результирующую обратную матрицу. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Код результата операции: OK (0) или код ошибки от вложенных вызовов. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/s21_matrix.c" line="154" column="22" bodyfile="src/s21_matrix.c" bodystart="154" bodyend="179"/>
        <references refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" compoundref="s21__matrix_8h" startline="40">OK</references>
        <references refid="group__matrix__algebra_1gab1e3ac9001c0a4e67e876f90d60d23e1" compoundref="s21__matrix_8c" startline="400" endline="418">s21_calc_complements</references>
        <references refid="group__matrix__arithmetic_1gacd185705783880e5cc7c233329b9d7ef" compoundref="s21__matrix_8c" startline="310" endline="326">s21_mult_number</references>
        <references refid="group__matrix__core_1gaad8337ad12e6dae5bdbbaf1d3b35e140" compoundref="s21__matrix_8c" startline="233" endline="243">s21_remove_matrix</references>
        <references refid="group__matrix__algebra_1ga4a5bbe0e14296f6ec7a91e57ac202ed2" compoundref="s21__matrix_8c" startline="351" endline="367">s21_transpose</references>
        <referencedby refid="group__matrix__algebra_1gacf36c0578df2e0b3a9e63fc8ad3b3276" compoundref="s21__matrix_8c" startline="421" endline="445">s21_inverse_matrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="s21__matrix_8c_1a278f477f030859aab9f7f86b1de2e41a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void perform_sum</definition>
        <argsstring>(const matrix_t *A, const matrix_t *B, matrix_t *result)</argsstring>
        <name>perform_sum</name>
        <param>
          <type>const <ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const <ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>B</declname>
        </param>
        <param>
          <type><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/s21_matrix.c" line="183" column="13" bodyfile="src/s21_matrix.c" bodystart="183" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="s21__matrix_8c_1a2bab9a3e4d06c787f4cfd1d9aa0a0bad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void perform_sub</definition>
        <argsstring>(const matrix_t *A, const matrix_t *B, matrix_t *result)</argsstring>
        <name>perform_sub</name>
        <param>
          <type>const <ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const <ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>B</declname>
        </param>
        <param>
          <type><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/s21_matrix.c" line="191" column="13" bodyfile="src/s21_matrix.c" bodystart="191" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="s21__matrix_8c_1a48a2f51b47433dc5f2741b87da639394" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void perform_mult_number</definition>
        <argsstring>(const matrix_t *A, double number, matrix_t *result)</argsstring>
        <name>perform_mult_number</name>
        <param>
          <type>const <ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>A</declname>
        </param>
        <param>
          <type>double</type>
          <declname>number</declname>
        </param>
        <param>
          <type><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/s21_matrix.c" line="200" column="13" bodyfile="src/s21_matrix.c" bodystart="200" bodyend="206"/>
      </memberdef>
      <member refid="group__matrix__core_1ga59fdb6ff4aeb96dc381c8f8986af2bd4" kind="function"><name>s21_create_matrix</name></member>
      <member refid="group__matrix__core_1gaad8337ad12e6dae5bdbbaf1d3b35e140" kind="function"><name>s21_remove_matrix</name></member>
      <member refid="group__matrix__core_1ga63bcd0d51a932d940a62b7356b69bfe7" kind="function"><name>s21_eq_matrix</name></member>
      <member refid="group__matrix__arithmetic_1gaaa350889d1c45b3b8bb269f9c37e94e7" kind="function"><name>s21_sum_matrix</name></member>
      <member refid="group__matrix__arithmetic_1ga1942072e4680db31e2854b071b00c3fc" kind="function"><name>s21_sub_matrix</name></member>
      <member refid="group__matrix__arithmetic_1gacd185705783880e5cc7c233329b9d7ef" kind="function"><name>s21_mult_number</name></member>
      <member refid="group__matrix__arithmetic_1ga9c2c1fd5d9c5e189f0fb2851fd2a1ee3" kind="function"><name>s21_mult_matrix</name></member>
      <member refid="group__matrix__algebra_1ga4a5bbe0e14296f6ec7a91e57ac202ed2" kind="function"><name>s21_transpose</name></member>
      <member refid="group__matrix__algebra_1gad1aa328504824fe335a97917c33e41b6" kind="function"><name>s21_determinant</name></member>
      <member refid="group__matrix__algebra_1gab1e3ac9001c0a4e67e876f90d60d23e1" kind="function"><name>s21_calc_complements</name></member>
      <member refid="group__matrix__algebra_1gacf36c0578df2e0b3a9e63fc8ad3b3276" kind="function"><name>s21_inverse_matrix</name></member>
    </sectiondef>
    <briefdescription>
<para>Файл с реализацией функций библиотеки s21_matrix. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="s21__matrix_8h" kindref="compound">s21_matrix.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===<sp/>Forward<sp/>Declarations<sp/>for<sp/>Static<sp/>Functions<sp/>===</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/><ref refid="s21__matrix_8c_1a2c36041738ad182088945fcd15eca832" kindref="member">populate_complements_matrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result);</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8c_1ae9d2106673240ba90364150a17349e70" kindref="member">perform_multiplication</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*B,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---<sp/>Вспомогательные<sp/>(приватные)<sp/>функции<sp/>---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="s21__matrix_8c_1ae01bee57f55876771f6d1c7f74d43854" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/><ref refid="s21__matrix_8c_1ae01bee57f55876771f6d1c7f74d43854" kindref="member">allocate_matrix_rows</ref>(<ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>result-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)calloc(result-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i]<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ошибка<sp/>выделения<sp/>памяти<sp/>для<sp/>строки.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Освобождаем<sp/>всю<sp/>матрицу,<sp/>включая<sp/>уже<sp/>выделенные<sp/>строки.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__matrix__core_1gaad8337ad12e6dae5bdbbaf1d3b35e140" kindref="member">s21_remove_matrix</ref>(result);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a95e17de6753200c8a418b2cc7e75647c" kindref="member">INCORRECT_MATRIX</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_code;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" kindref="member">is_matrix_valid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(A<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>A-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref><sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="s21__matrix_8c_1ad0f646f72453f127ab099735d14377c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8c_1ad0f646f72453f127ab099735d14377c0" kindref="member">get_minor_matrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>excluding_row,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>excluding_col,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res_row<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>excluding_row)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res_col<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>excluding_col)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[res_row][res_col]<sp/>=<sp/>A-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][j];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res_col++;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>res_row++;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="s21__matrix_8c_1ae9d2106673240ba90364150a17349e70" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8c_1ae9d2106673240ba90364150a17349e70" kindref="member">perform_multiplication</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*B,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>B-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][j]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>;<sp/>++k)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>A-&gt;columns<sp/>==<sp/>B-&gt;rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][j]<sp/>+=<sp/>A-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][k]<sp/>*<sp/>B-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[k][j];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="s21__matrix_8c_1a4d867d79fab5221c0825b4ef15c8d99c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8c_1a4d867d79fab5221c0825b4ef15c8d99c" kindref="member">perform_transposition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[j][i]<sp/>=<sp/>A-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][j];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="s21__matrix_8c_1a2c36041738ad182088945fcd15eca832" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/><ref refid="s21__matrix_8c_1a2c36041738ad182088945fcd15eca832" kindref="member">populate_complements_matrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>minor<sp/>=<sp/>{NULL,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minor_det<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Создание<sp/>минора<sp/>для<sp/>элемента<sp/>(i,<sp/>j)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="group__matrix__core_1ga59fdb6ff4aeb96dc381c8f8986af2bd4" kindref="member">s21_create_matrix</ref>(A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref><sp/>-<sp/>1,<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref><sp/>-<sp/>1,<sp/>&amp;minor);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>!=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="s21__matrix_8c_1ad0f646f72453f127ab099735d14377c0" kindref="member">get_minor_matrix</ref>(A,<sp/>i,<sp/>j,<sp/>&amp;minor);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Определитель<sp/>минора</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="group__matrix__algebra_1gad1aa328504824fe335a97917c33e41b6" kindref="member">s21_determinant</ref>(&amp;minor,<sp/>&amp;minor_det);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__matrix__core_1gaad8337ad12e6dae5bdbbaf1d3b35e140" kindref="member">s21_remove_matrix</ref>(&amp;minor);<sp/></highlight><highlight class="comment">//<sp/>Освобождаем<sp/>память<sp/>из-под<sp/>минора</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>!=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Записываем<sp/>алгебраическое<sp/>дополнение<sp/>в<sp/>результирующую<sp/>матрицу</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][j]<sp/>=<sp/>minor_det<sp/>*<sp/>pow(-1,<sp/>i<sp/>+<sp/>j);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>!=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Выход<sp/>из<sp/>внешнего<sp/>цикла<sp/>при<sp/>ошибке</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_code;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="s21__matrix_8c_1a96a189c4d33a3082ff66f8e0ca67531d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/><ref refid="s21__matrix_8c_1a96a189c4d33a3082ff66f8e0ca67531d" kindref="member">perform_inverse_calculation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>det,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Инициализация<sp/>временных<sp/>матриц<sp/>в<sp/>безопасное<sp/>состояние<sp/>(NULL-указатели).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>complements<sp/>=<sp/>{NULL,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>transposed_complements<sp/>=<sp/>{NULL,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Вычисление<sp/>матрицы<sp/>алгебраических<sp/>дополнений.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>return_code<sp/>=<sp/><ref refid="group__matrix__algebra_1gab1e3ac9001c0a4e67e876f90d60d23e1" kindref="member">s21_calc_complements</ref>(A,<sp/>&amp;complements);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Шаг<sp/>2:<sp/>Транспонировать<sp/>ее,<sp/>если<sp/>предыдущий<sp/>шаг<sp/>прошел<sp/>успешно.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="group__matrix__algebra_1ga4a5bbe0e14296f6ec7a91e57ac202ed2" kindref="member">s21_transpose</ref>(&amp;complements,<sp/>&amp;transposed_complements);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="group__matrix__arithmetic_1gacd185705783880e5cc7c233329b9d7ef" kindref="member">s21_mult_number</ref>(&amp;transposed_complements,<sp/>1.0<sp/>/<sp/>det,<sp/>result);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Очищаем<sp/>память,<sp/>выделенную<sp/>для<sp/>временных<sp/>матриц.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="group__matrix__core_1gaad8337ad12e6dae5bdbbaf1d3b35e140" kindref="member">s21_remove_matrix</ref>(&amp;complements);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="group__matrix__core_1gaad8337ad12e6dae5bdbbaf1d3b35e140" kindref="member">s21_remove_matrix</ref>(&amp;transposed_complements);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_code;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---<sp/>Реализация<sp/>публичных<sp/>функций<sp/>---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>perform_sum(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*B,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][j]<sp/>=<sp/>A-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][j]<sp/>+<sp/>B-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][j];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>perform_sub(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*B,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][j]<sp/>=<sp/>A-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][j]<sp/>-<sp/>B-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][j];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>perform_mult_number(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>number,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][j]<sp/>=<sp/>A-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][j]<sp/>*<sp/>number;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="group__matrix__core_1ga59fdb6ff4aeb96dc381c8f8986af2bd4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__matrix__core_1ga59fdb6ff4aeb96dc381c8f8986af2bd4" kindref="member">s21_create_matrix</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>columns,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows<sp/>&lt;=<sp/>0<sp/>||<sp/>columns<sp/>&lt;=<sp/>0<sp/>||<sp/>result<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a95e17de6753200c8a418b2cc7e75647c" kindref="member">INCORRECT_MATRIX</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**)calloc(rows,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a95e17de6753200c8a418b2cc7e75647c" kindref="member">INCORRECT_MATRIX</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Инициализируем<sp/>поля<sp/>структуры<sp/>сразу<sp/>после<sp/>успешного<sp/>выделения.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref><sp/>=<sp/>rows;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref><sp/>=<sp/>columns;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8c_1ae01bee57f55876771f6d1c7f74d43854" kindref="member">allocate_matrix_rows</ref>(result);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_code;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="group__matrix__core_1gaad8337ad12e6dae5bdbbaf1d3b35e140" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__matrix__core_1gaad8337ad12e6dae5bdbbaf1d3b35e140" kindref="member">s21_remove_matrix</ref>(<ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(A<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>A-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(A-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i]);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>free(A-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>A-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="group__matrix__core_1ga63bcd0d51a932d940a62b7356b69bfe7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__matrix__core_1ga63bcd0d51a932d940a62b7356b69bfe7" kindref="member">s21_eq_matrix</ref>(<ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*B)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>return_code<sp/>=<sp/>SUCCESS;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" kindref="member">is_matrix_valid</ref>(A)<sp/>||<sp/>!<ref refid="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" kindref="member">is_matrix_valid</ref>(B)<sp/>||</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref><sp/>!=<sp/>B-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref><sp/>||<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref><sp/>!=<sp/>B-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/>FAILURE;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/>SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(A-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][j]<sp/>-<sp/>B-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[i][j])<sp/>&gt;<sp/>S21_EPS)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/>FAILURE;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/>FAILURE)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_code;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="group__matrix__arithmetic_1gaaa350889d1c45b3b8bb269f9c37e94e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__matrix__arithmetic_1gaaa350889d1c45b3b8bb269f9c37e94e7" kindref="member">s21_sum_matrix</ref>(<ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*B,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" kindref="member">is_matrix_valid</ref>(A)<sp/>||<sp/>!<ref refid="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" kindref="member">is_matrix_valid</ref>(B))<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a95e17de6753200c8a418b2cc7e75647c" kindref="member">INCORRECT_MATRIX</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref><sp/>!=<sp/>B-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref><sp/>||<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref><sp/>!=<sp/>B-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0ab3303e95e5f7ad32bd5cf39b3fa94584" kindref="member">CALCULATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="group__matrix__core_1ga59fdb6ff4aeb96dc381c8f8986af2bd4" kindref="member">s21_create_matrix</ref>(A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>,<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>,<sp/>result);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>perform_sum(A,<sp/>B,<sp/>result);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_code;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="group__matrix__arithmetic_1ga1942072e4680db31e2854b071b00c3fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__matrix__arithmetic_1ga1942072e4680db31e2854b071b00c3fc" kindref="member">s21_sub_matrix</ref>(<ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*B,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" kindref="member">is_matrix_valid</ref>(A)<sp/>||<sp/>!<ref refid="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" kindref="member">is_matrix_valid</ref>(B))<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a95e17de6753200c8a418b2cc7e75647c" kindref="member">INCORRECT_MATRIX</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref><sp/>!=<sp/>B-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref><sp/>||<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref><sp/>!=<sp/>B-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0ab3303e95e5f7ad32bd5cf39b3fa94584" kindref="member">CALCULATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="group__matrix__core_1ga59fdb6ff4aeb96dc381c8f8986af2bd4" kindref="member">s21_create_matrix</ref>(A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>,<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>,<sp/>result);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>perform_sub(A,<sp/>B,<sp/>result);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_code;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="group__matrix__arithmetic_1gacd185705783880e5cc7c233329b9d7ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__matrix__arithmetic_1gacd185705783880e5cc7c233329b9d7ef" kindref="member">s21_mult_number</ref>(<ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>number,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" kindref="member">is_matrix_valid</ref>(A))<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a95e17de6753200c8a418b2cc7e75647c" kindref="member">INCORRECT_MATRIX</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="group__matrix__core_1ga59fdb6ff4aeb96dc381c8f8986af2bd4" kindref="member">s21_create_matrix</ref>(A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>,<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>,<sp/>result);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>perform_mult_number(A,<sp/>number,<sp/>result);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_code;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="group__matrix__arithmetic_1ga9c2c1fd5d9c5e189f0fb2851fd2a1ee3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__matrix__arithmetic_1ga9c2c1fd5d9c5e189f0fb2851fd2a1ee3" kindref="member">s21_mult_matrix</ref>(<ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*B,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" kindref="member">is_matrix_valid</ref>(A)<sp/>||<sp/>!<ref refid="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" kindref="member">is_matrix_valid</ref>(B))<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a95e17de6753200c8a418b2cc7e75647c" kindref="member">INCORRECT_MATRIX</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref><sp/>&amp;&amp;<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref><sp/>!=<sp/>B-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0ab3303e95e5f7ad32bd5cf39b3fa94584" kindref="member">CALCULATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="group__matrix__core_1ga59fdb6ff4aeb96dc381c8f8986af2bd4" kindref="member">s21_create_matrix</ref>(A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>,<sp/>B-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>,<sp/>result);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s21__matrix_8c_1ae9d2106673240ba90364150a17349e70" kindref="member">perform_multiplication</ref>(A,<sp/>B,<sp/>result);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_code;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="group__matrix__algebra_1ga4a5bbe0e14296f6ec7a91e57ac202ed2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__matrix__algebra_1ga4a5bbe0e14296f6ec7a91e57ac202ed2" kindref="member">s21_transpose</ref>(<ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" kindref="member">is_matrix_valid</ref>(A))<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a95e17de6753200c8a418b2cc7e75647c" kindref="member">INCORRECT_MATRIX</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="group__matrix__core_1ga59fdb6ff4aeb96dc381c8f8986af2bd4" kindref="member">s21_create_matrix</ref>(A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>,<sp/>A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>,<sp/>result);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="s21__matrix_8c_1a4d867d79fab5221c0825b4ef15c8d99c" kindref="member">perform_transposition</ref>(A,<sp/>result);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_code;</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="group__matrix__algebra_1gad1aa328504824fe335a97917c33e41b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__matrix__algebra_1gad1aa328504824fe335a97917c33e41b6" kindref="member">s21_determinant</ref>(<ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>*result<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" kindref="member">is_matrix_valid</ref>(A))<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a95e17de6753200c8a418b2cc7e75647c" kindref="member">INCORRECT_MATRIX</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref><sp/>!=<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0ab3303e95e5f7ad32bd5cf39b3fa94584" kindref="member">CALCULATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref><sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>*result<sp/>=<sp/>A-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[0][0];</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>minor;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="group__matrix__core_1ga59fdb6ff4aeb96dc381c8f8986af2bd4" kindref="member">s21_create_matrix</ref>(A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref><sp/>-<sp/>1,<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref><sp/>-<sp/>1,<sp/>&amp;minor);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>!=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="s21__matrix_8c_1ad0f646f72453f127ab099735d14377c0" kindref="member">get_minor_matrix</ref>(A,<sp/>0,<sp/>j,<sp/>&amp;minor);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minor_det<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="group__matrix__algebra_1gad1aa328504824fe335a97917c33e41b6" kindref="member">s21_determinant</ref>(&amp;minor,<sp/>&amp;minor_det);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__matrix__core_1gaad8337ad12e6dae5bdbbaf1d3b35e140" kindref="member">s21_remove_matrix</ref>(&amp;minor);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>!=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sign<sp/>=<sp/>(j<sp/>%<sp/>2<sp/>==<sp/>0)<sp/>?<sp/>1.0<sp/>:<sp/>-1.0;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*result<sp/>+=<sp/>sign<sp/>*<sp/>A-&gt;<ref refid="structmatrix__struct_1aae4109605ff69a4afc61a92f7b374a2f" kindref="member">matrix</ref>[0][j]<sp/>*<sp/>minor_det;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_code;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="group__matrix__algebra_1gab1e3ac9001c0a4e67e876f90d60d23e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__matrix__algebra_1gab1e3ac9001c0a4e67e876f90d60d23e1" kindref="member">s21_calc_complements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" kindref="member">is_matrix_valid</ref>(A))<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a95e17de6753200c8a418b2cc7e75647c" kindref="member">INCORRECT_MATRIX</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref><sp/>!=<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0ab3303e95e5f7ad32bd5cf39b3fa94584" kindref="member">CALCULATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="group__matrix__core_1ga59fdb6ff4aeb96dc381c8f8986af2bd4" kindref="member">s21_create_matrix</ref>(A-&gt;<ref refid="structmatrix__struct_1a1161ae2ab4d3b3207619bee96ef97f92" kindref="member">rows</ref>,<sp/>A-&gt;<ref refid="structmatrix__struct_1ada0243b85145d2029d0814485bc389f7" kindref="member">columns</ref>,<sp/>result);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8c_1a2c36041738ad182088945fcd15eca832" kindref="member">populate_complements_matrix</ref>(A,<sp/>result);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_code;</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="group__matrix__algebra_1gacf36c0578df2e0b3a9e63fc8ad3b3276" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__matrix__algebra_1gacf36c0578df2e0b3a9e63fc8ad3b3276" kindref="member">s21_inverse_matrix</ref>(<ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*A,<sp/><ref refid="s21__matrix_8h_1a6121abdcc0c0f5e9a8c42390d3274fdd" kindref="member">matrix_t</ref><sp/>*result)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0" kindref="member">result_code_t</ref><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>det<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="s21__matrix_8c_1a8607e5041297f423db89ce899f0af7e0" kindref="member">is_matrix_valid</ref>(A))<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a95e17de6753200c8a418b2cc7e75647c" kindref="member">INCORRECT_MATRIX</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Функция<sp/>s21_determinant<sp/>верифицирует<sp/>квадратичность<sp/>матрицы.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="group__matrix__algebra_1gad1aa328504824fe335a97917c33e41b6" kindref="member">s21_determinant</ref>(A,<sp/>&amp;det);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(det)<sp/>&lt;<sp/>S21_EPS)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0ab3303e95e5f7ad32bd5cf39b3fa94584" kindref="member">CALCULATION_ERROR</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>==<sp/><ref refid="s21__matrix_8h_1acb67c5c5b7c3c60bb8563e0cc400b6d0a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="s21__matrix_8c_1a96a189c4d33a3082ff66f8e0ca67531d" kindref="member">perform_inverse_calculation</ref>(A,<sp/>det,<sp/>result);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_code;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/s21_matrix.c"/>
  </compounddef>
</doxygen>
